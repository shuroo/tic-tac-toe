{"version":3,"sources":["logo.svg","components/DisplayBoard.jsx","pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["DisplayBoard","board","onClickCell","Container","className","Row","Col","onClick","HomePage","useState","setBoard","turn","setTurn","won","setWon","checkRow","index1","index2","index3","box1","box2","box3","useEffect","checkCol1","checkRow1","checkRow2","checkRow3","checkDiag1","checkDiag2","checkCol2","checkIsWon","wonAlert","Alert","boardElement","index","cpyBoard","nextTurn","Button","window","location","reload","variant","xmlns","width","height","fill","class","viewBox","d","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.899dacce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Row,Col, Container } from \"react-bootstrap\"\nimport \"./DisplayBoard.css\"\n\nfunction DisplayBoard({board,onClickCell}){\n\n    return (<Container className=\"boardClass\">\n        <Row><Col onClick={()=>onClickCell(0)}>{board[0]}</Col><Col onClick={()=>onClickCell(1)}>{board[1]}</Col><Col onClick={()=>onClickCell(2)}>{board[2]}</Col></Row>\n        <Row><Col onClick={()=>onClickCell(3)}>{board[3]}</Col><Col onClick={()=>onClickCell(4)}>{board[4]}</Col><Col onClick={()=>onClickCell(5)}>{board[5]}</Col></Row>\n        <Row><Col onClick={()=>onClickCell(6)}>{board[6]}</Col><Col onClick={()=>onClickCell(7)}>{board[7]}</Col><Col onClick={()=>onClickCell(8)}>{board[8]}</Col></Row>\n        </Container>\n        )\n}\n\nexport default DisplayBoard;"," \nimport React, { Component,useState,useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\nimport './style.css';\nimport DisplayBoard from '../components/DisplayBoard'; \nfunction HomePage(){\n\n    \n    const [board, setBoard] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]); \n    const [turn,setTurn] =  useState(\"X\"); \n    const [won,setWon] =  useState(null); \n\n    function checkRow(index1,index2,index3){\n        var box1 = board[index1];\n        var box2 = board[index2];\n        var box3 = board[index3];\n        return ( box1 !==\"\" && box1===box2 && box2===box3 );\n    }\n\n    function checkIsWon(){ \n             var checkCol1 = checkRow(0,3,6);\n             var checkRow1 = checkRow(0,1,2);\n             var checkRow2 = checkRow(3,4,5);\n             var checkRow3 = checkRow(6,7,8);\n             var checkDiag1 = checkRow(0,4,8)\n             var checkDiag2 = checkRow(2,4,6)\n             var checkCol2 = checkRow(1,4,7)\n             var checkCol3 = checkRow(2,5,8)\n\n             let isWon = (true===checkCol3) || (true===checkCol2) ||\n             (true===checkCol1) || (true===checkRow1) ||\n             (true===checkRow2) || (true===checkRow3) ||\n             (true===checkDiag1) || (true===checkDiag2);\n    \n\n      // todo: how to use this properly???\n        if(isWon)\n            {\n                setWon(turn);\n            };\n    }\n    \n    function onClickCell(index){\n        let cpyBoard = [ ... board];\n        let nextTurn = (turn===\"X\")? \"O\" : \"X\";\n        if(cpyBoard[index] === ''){\n            cpyBoard[index] = nextTurn;\n            setTurn(nextTurn);\n            setBoard(cpyBoard);\n        }\n    }\n\n    function refreshPage() {\n        window.location.reload(false);\n      }\n   \n    useEffect(()=>{ checkIsWon()},[board]);\n\n    const wonAlert = ((won != null)?<Alert className=\"info alertBox\">{turn} Won!</Alert> : null);\n    const boardElement = (won?null : <DisplayBoard board={board} onClickCell={onClickCell} /> );\n   return <div><Container>{wonAlert}\n  \n   <div>{boardElement} </div>\n\n\n   </Container>\n   <Container>\n<Button onClick={refreshPage} variant=\"secondary\">Start Over!\n       <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-bootstrap-reboot\" viewBox=\"0 0 16 16\">\n  <path d=\"M1.161 8a6.84 6.84 0 1 0 6.842-6.84.58.58 0 1 1 0-1.16 8 8 0 1 1-6.556 3.412l-.663-.577a.58.58 0 0 1 .227-.997l2.52-.69a.58.58 0 0 1 .728.633l-.332 2.592a.58.58 0 0 1-.956.364l-.643-.56A6.812 6.812 0 0 0 1.16 8z\"/>\n  <path d=\"M6.641 11.671V8.843h1.57l1.498 2.828h1.314L9.377 8.665c.897-.3 1.427-1.106 1.427-2.1 0-1.37-.943-2.246-2.456-2.246H5.5v7.352h1.141zm0-3.75V5.277h1.57c.881 0 1.416.499 1.416 1.32 0 .84-.504 1.324-1.386 1.324h-1.6z\"/>\n</svg></Button>{' '}</Container>\n</div>\n}\n\nexport default HomePage;","import logo from './logo.svg';\nimport HomePage from './pages/HomePage';\nimport './App.css';\n\nfunction App() {\n    return ( <\n        HomePage / >\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}