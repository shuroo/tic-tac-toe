{"version":3,"sources":["logo.svg","components/DisplayBoard.jsx","pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["DisplayBoard","board","onClickCell","Container","className","Row","Col","onClick","HomePage","useState","setBoard","turn","setTurn","won","setWon","checkRow","box1","box2","box3","trim","length","useEffect","wonAlert","Alert","boardElement","index","cpyBoard","nextTurn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAAe,I,qECaAA,MAVf,YAA2C,IAApBC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,YAEzB,OAAQ,eAACC,EAAA,EAAD,CAAWC,UAAU,aAArB,UACJ,eAACC,EAAA,EAAD,WAAK,cAACC,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,KAAS,cAACK,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,KAAS,cAACK,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,QAClJ,eAACI,EAAA,EAAD,WAAK,cAACC,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,KAAS,cAACK,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,KAAS,cAACK,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,QAClJ,eAACI,EAAA,EAAD,WAAK,cAACC,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,KAAS,cAACK,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,KAAS,cAACK,EAAA,EAAD,CAAKC,QAAS,kBAAIL,EAAY,IAA9B,SAAmCD,EAAM,YC0C3IO,MA5Cf,WAAoB,IAAD,EAGWC,mBAAS,CAAC,MAAM,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,OAH9D,mBAGRR,EAHQ,KAGDS,EAHC,OAISD,mBAAS,KAJlB,mBAIRE,EAJQ,KAIHC,EAJG,OAKOH,mBAAS,MALhB,mBAKRI,EALQ,KAKJC,EALI,KAOf,SAASC,EAASC,EAAKC,EAAKC,GACxB,OAASF,EAAKG,OAAOC,OAAS,GAAKJ,EAAKG,SAASF,EAAKE,SAAUD,EAAKC,OAyBzEE,qBAAU,WArBM,CAAEN,EAASd,EAAM,GAAGA,EAAM,GAAGA,EAAM,KAM/Cc,EAASd,EAAM,GAAGA,EAAM,GAAGA,EAAM,MAIfa,EAAOH,KAWC,CAACV,IAE/B,IAAMqB,EAAYT,EAAI,cAACU,EAAA,EAAD,CAAOnB,UAAU,gBAAjB,sBAAoD,KACpEoB,EAAgBX,EAAI,KAAO,cAAC,EAAD,CAAcZ,MAAOA,EAAOC,YAX7D,SAAqBuB,GACjB,IAAIC,EAAQ,YAASzB,GACjB0B,EAAmB,MAAPhB,EAAa,IAAM,IACnCe,EAASD,GAASE,EAClBf,EAAQe,GACRjB,EAASgB,MAOd,OAAO,eAACvB,EAAA,EAAD,WAAYmB,EAEnB,gCAAME,EAAN,W,MCnCYI,MANf,WACI,OAAS,cACL,EADK,KCOEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a40ee440.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Row,Col, Container } from \"react-bootstrap\"\nimport \"./DisplayBoard.css\"\n\nfunction DisplayBoard({board,onClickCell}){\n\n    return (<Container className=\"boardClass\">\n        <Row><Col onClick={()=>onClickCell(0)}>{board[0]}</Col><Col onClick={()=>onClickCell(1)}>{board[1]}</Col><Col onClick={()=>onClickCell(2)}>{board[2]}</Col></Row>\n        <Row><Col onClick={()=>onClickCell(3)}>{board[3]}</Col><Col onClick={()=>onClickCell(4)}>{board[4]}</Col><Col onClick={()=>onClickCell(5)}>{board[5]}</Col></Row>\n        <Row><Col onClick={()=>onClickCell(6)}>{board[6]}</Col><Col onClick={()=>onClickCell(7)}>{board[7]}</Col><Col onClick={()=>onClickCell(8)}>{board[8]}</Col></Row>\n        </Container>\n        )\n}\n\nexport default DisplayBoard;"," \nimport React, { Component,useState,useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\nimport './style.css';\nimport DisplayBoard from '../components/DisplayBoard'; \nfunction HomePage(){\n\n    \n    const [board, setBoard] = useState([\"   \",\"   \",\"  \",\" \",\"  \",\"  \",\"  \",\"  \",\"  \"]); \n    const [turn,setTurn] =  useState(\"X\"); \n    const [won,setWon] =  useState(null); \n\n    function checkRow(box1,box2,box3){\n        return ( box1.trim().length > 0 && box1.trim()===box2.trim() ===box3.trim() );\n    }\n\n    function checkIsWon(){ \n        var isWon = [ checkRow(board[0],board[3],board[6]) || \n        // checkRow(board[0],board[1],board[2]) ||\n        // checkRow(board[3],board[4],board[5]) ||\n        // checkRow(board[6],board[7],board[8]) || \n        // checkRow(board[1],board[4],board[7]) ||\n        // checkRow(board[2],board[5],board[8]) ||\n        checkRow(board[0],board[4],board[8]) \n           \n    ]\n\n                if(isWon){setWon(turn)};\n    }\n    \n    function onClickCell(index){\n        let cpyBoard = [ ... board];\n        let nextTurn = (turn===\"X\")? \"O\" : \"X\";\n        cpyBoard[index] = nextTurn;\n        setTurn(nextTurn);\n        setBoard(cpyBoard);\n    }\n   \n    useEffect(()=>{ checkIsWon()},[board]);\n\n    const wonAlert = (won?<Alert className=\"info alertBox\">You Won!</Alert> : null);\n    const boardElement = (won?null : <DisplayBoard board={board} onClickCell={onClickCell} /> );\n   return <Container>{wonAlert}\n   \n   <div>{boardElement} </div>\n   </Container>\n\n}\n\nexport default HomePage;","import logo from './logo.svg';\nimport HomePage from './pages/HomePage';\nimport './App.css';\n\nfunction App() {\n    return ( <\n        HomePage / >\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}